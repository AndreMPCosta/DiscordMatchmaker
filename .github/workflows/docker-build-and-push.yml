name: Build and Push Docker Image

# Trigger the workflow on a push to the main branch
on:
  push:
    branches:
      - main

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install libgl1-mesa-glx and libglib2.0-0
        run: sudo apt-get install -y libgl1-mesa-glx libglib2.0-0

      # Setup Python
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10.11"

      # Install pipenv
      - name: Install pipenv
        run: |
          python -m pip install --upgrade pipenv

      # Cache pipenv
      - id: cache-pipenv
        uses: actions/cache@v3
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}

      # Install dependencies
      - name: Install dependencies
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: |
          pipenv install --dev

      # Run linter
      - name: Run linter
        run: |
          pipenv run lint

      # Run tests
      - name: Run tests
        run: |
          pipenv run test -v

  build-and-push:
    needs: lint-and-test
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Docker Buildx (optional but recommended for multi-platform builds)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      # Build the Docker image
      - name: Build Docker image
        run: docker build -t andrempcosta/bot-repo:latest .

      # Push the Docker image to Docker Hub
      - name: Push Docker image
        run: docker push andrempcosta/bot-repo:latest

      # Update Portainer Service via Webhook
      - name: Update Service via Webhook
        uses: newarifrh/portainer-service-webhook@v1
        with:
          webhook_url: ${{ secrets.PORTAINER_WEBHOOK_URL }}